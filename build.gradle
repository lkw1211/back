buildscript {
    ext {
        springBootVersion = '3.1.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin")
    }
}

allprojects {
    group = 'com.boardgaming'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':common') {
    dependencies {

    }
}

project(':domain') {
    dependencies {
    }
}

project(':core') {
    dependencies {
        implementation project(path: ':domain', configuration: 'default')
        implementation project(path: ':common', configuration: 'default')
    }
}

project(':gomoku_ws') {
    dependencies {
        implementation project(path: ':core', configuration: 'default')
    }
}

project(':api') {
    dependencies {
        implementation project(path: ':core', configuration: 'default')
    }
}