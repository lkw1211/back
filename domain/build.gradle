plugins {
    id "java"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "mysql:mysql-connector-java:8.0.32"
    implementation "io.hypersistence:hypersistence-utils-hibernate-62:3.5.1"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    testImplementation "it.ozimov:embedded-redis:0.7.2"
    testImplementation "org.springframework.boot:spring-boot-starter-data-redis"
    testImplementation "com.h2database:h2:1.4.200"
    testImplementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
def generated = "src/main/generated"

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [ generated ]
}

clean {
    delete file(generated)
}